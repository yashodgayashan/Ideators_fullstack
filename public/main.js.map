{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Services/auth.service.ts","webpack:///./src/app/Services/validate.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nconst helper = new JwtHelperService();\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n  constructor(private http:Http) { }\n\n  registerUser(user){\n    let headers = new Headers();\n    headers.append('Cotent-type','application/json');\n    return this.http.post('http://localhost:3000/users/register',user,{headers: headers}) //http://localhost:3000/\n      .pipe(map(res => res.json()));\n  }\n\n  authendicateUser(user){\n    let headers = new Headers();\n    headers.append('Cotent-type','application/json');\n    return this.http.post('http://localhost:3000/users/authenticate',user,{headers: headers}) //http://localhost:3000/\n      .pipe(map(res => res.json()));\n  }\n  storeUserData(token , user){\n    localStorage.setItem('id_token' , token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  getProfile(){\n    let headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization' , this.authToken)\n    headers.append('Cotent-type','application/json');\n    return this.http.get('http://localhost:3000/users/profile',{headers: headers}) //http://localhost:3000/\n      .pipe(map(res => res.json()));\n  }\n\n  logout(){\n    this.authToken =null;\n    this.user =null;\n    localStorage.clear();\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('id_token')\n    this.authToken = token;\n  }\n\n  loggedIn(){\n    this.loadToken();\n    return helper.isTokenExpired(this.authToken);\n    //return true;\n  }\n  \n}\n ","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (user.name == undefined || user.email == undefined || user.password == undefined || user.username == undefined) {\n    return false;\n    } else {\n    return true;\n    }\n  }\n\n  validateEmail(email){\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {HttpModule} from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { HomeComponent } from './home/home.component';\n\nimport { ToastrModule } from 'ngx-toastr';\nimport {ValidateService} from './Services/validate.service';\nimport {AuthService} from './Services/auth.service';\nimport {AuthGuard} from './guards/auth.guard';\n\nconst appRoutes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent},\n  {path:'dashbord',component:DashboardComponent, canActivate : [AuthGuard]},\n  {path:'profile',component:ProfileComponent, canActivate : [AuthGuard]}\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    ProfileComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    CommonModule,\n    BrowserModule,\n    HttpModule,\n    FormsModule,\n    ToastrModule.forRoot({\n      timeOut: 5000,\n      positionClass: 'toast-bottom-center',\n      preventDuplicates: true,\n      }) // ToastrModule added\n  ],\n  providers: [ValidateService, AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Dashboard</h2>\\n<p>Welcome to your Dashboard</p>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../Services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n    constructor(private authService : AuthService, private router:Router){\r\n\r\n    }\r\n\r\n    canActivate(){\r\n        if(this.authService.loggedIn()){\r\n            this.router.navigate(['/login']);\r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n  <h1>Event Handling Web Application</h1>\\n  <p class=\\\"lead\\\">Welcome to the event handling application</p>\\n  <div>\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">.col-sm-3</div>\\n    <div class=\\\"col-md-4\\\">.col-sm-3</div>\\n    <div class=\\\"col-md-4\\\">.col-sm-3</div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Login</h2>\\n<form (submit)=\\\"onLoginSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\"> \\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\"> \\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Login\\\">\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../Services/auth.service';\nimport {Router} from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n      username:String;\n      password:String;\n\n  constructor(\n    private authService:AuthService,\n    private router : Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n  }\n  onLoginSubmit(){\n    const user = {\n      username:this.username,\n      password:this.password,\n    }\n    this.authService.authendicateUser(user).subscribe(data =>{\n      if(data.success){\n        this.authService.storeUserData(data.token , data.user);\n        //console.log(data.token);\n        this.toastr.info('you are now login');\n        console.log(\"you are now login\");\n        this.router.navigate(['/dashbord'])\n      }\n      else{\n        this.toastr.error(data.msg);\n        console.log(data.msg);\n        this.router.navigate(['/login'])\n      }\n      \n    });\n  }\n}","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary navbar-default\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Ideators</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li *ngIf=\\\"authService.loggedIn()\\\" class=\\\"nav-item active\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\">Home</a>\\n      </li>\\n      <li *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"nav-item active\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Home</a>\\n    </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n        <ul class=\\\"navbar-nav mr-auto my-2 my-sm-0\\\">\\n            <li *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\"  [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n                        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\n            </li>\\n            <li *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\"  [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n            </li>\\n            <li *ngIf=\\\"authService.loggedIn()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\"  [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n            </li>\\n            <li *ngIf=\\\"authService.loggedIn()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\"  [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n                <a class=\\\"nav-link\\\"  [routerLink]=\\\"['/register']\\\">Registration</a>\\n            </li>\\n            <li *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"nav-item\\\" >\\n                <a class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">Logout</a>\\n            </li>\\n        </ul>\\n    </form>\\n    </div>\\n\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../Services/auth.service';\nimport {Router} from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    \n    private authService:AuthService,\n    private router : Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick(){\n    \n    this.authService.logout();\n    console.log(\"you are logout\");\n    this.toastr.info('you are logout');\n    this.router.navigate(['/login']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"user\\\">\\n  <h2 class=\\\"page-header\\\">{{user.name}}</h2>\\n  <ul>\\n    <li class=\\\"list-group-item\\\">Username: {{user.userName}}</li>\\n    <li class=\\\"list-group-item\\\">Email: {{user.emai}}</li>\\n  </ul>\\n</div>\"","import { Router } from '@angular/router';\nimport { AuthService } from './../Services/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user:Object;\n  constructor(\n    private authService:AuthService,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile.user;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Register</h2>\\n<form (submit)=\\\"onRegisterSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Name</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label>Username</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\">\\n    </div>\\n  <div class=\\\"form-group\\\">\\n      <label>Email</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\"  class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label>Password</label>\\n      <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\n</form>\"","import { Router } from '@angular/router';\nimport { AuthService } from './../Services/auth.service';\nimport { ValidateService } from './../Services/validate.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n  constructor(\n    private validateService:ValidateService, \n    private toastr: ToastrService,\n    private authService:AuthService,\n    private router:Router\n    ) { }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    }\n\n    if (!this.validateService.validateRegister(user)) {\n      //console.log('Please fill in all fields');\n     this.toastr.error('Please fill in all fields');\n      return false;\n    }\n\n    // validate email\n\n    if (!this.validateService.validateEmail(user.email)) {\n      //console.log('Please use valid email');\n      this.toastr.error('Please use valid email');\n      return false;\n    }\n\n    //Register User\n    this.authService.registerUser(user).subscribe(data =>{\n      if(data.success){\n        //console.log(\"your now registerd\");\n        this.toastr.success('Your now registerd');\n        this.router.navigate(['/login']);\n      }\n      else{\n        //console.log(\"Something went wrong\");\n        this.toastr.error(data.msg);\n        this.router.navigate(['/register']);\n      }\n    });\n  }\n  \n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}